# This is a basic workflow to help you get started with Actions

name: EKS Continuous Deployment

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on. Env lines will tell that workflow will happen in my AWS account. It should come from secrets.
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Validate Code
        working-directory: EKS
        run: |
          terraform init
          terraform validate

      # Work inside of EKS folder and try select dev and if it does not exist, create dev workspace. 
      - name: Workspace
        working-directory: EKS
        run: |
          terraform workspace select dev  || terraform workspace new dev

      # Runs a set of commands using the runners shell
      - name: Plan
        working-directory: EKS
        run: |
          terraform plan

      # Runs a set of commands using the runners shell
      - name: Apply
        working-directory: EKS
        run: |
          terraform apply --auto-approve
